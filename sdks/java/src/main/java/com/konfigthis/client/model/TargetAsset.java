/*
 * SnapTrade
 * Connect brokerage accounts to your app for live positions and trading
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@snaptrade.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.UniversalSymbol;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.UUID;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Target percentage of a certain asset
 */
@ApiModel(description = "Target percentage of a certain asset")
@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TargetAsset {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_SYMBOL = "symbol";
  @SerializedName(SERIALIZED_NAME_SYMBOL)
  private UniversalSymbol symbol;

  public static final String SERIALIZED_NAME_PERCENT = "percent";
  @SerializedName(SERIALIZED_NAME_PERCENT)
  private BigDecimal percent;

  public static final String SERIALIZED_NAME_IS_SUPPORTED = "is_supported";
  @SerializedName(SERIALIZED_NAME_IS_SUPPORTED)
  private Boolean isSupported;

  public static final String SERIALIZED_NAME_IS_EXCLUDED = "is_excluded";
  @SerializedName(SERIALIZED_NAME_IS_EXCLUDED)
  private Boolean isExcluded;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  private Object meta;

  public TargetAsset() {
  }

  public TargetAsset id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2bcd7cc3-e922-4976-bce1-9858296801c3", value = "")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public TargetAsset symbol(UniversalSymbol symbol) {
    
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UniversalSymbol getSymbol() {
    return symbol;
  }


  public void setSymbol(UniversalSymbol symbol) {
    this.symbol = symbol;
  }


  public TargetAsset percent(BigDecimal percent) {
    
    this.percent = percent;
    return this;
  }

   /**
   * Get percent
   * minimum: 0
   * maximum: 100
   * @return percent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "90", value = "")

  public BigDecimal getPercent() {
    return percent;
  }


  public void setPercent(BigDecimal percent) {
    this.percent = percent;
  }


  public TargetAsset isSupported(Boolean isSupported) {
    
    this.isSupported = isSupported;
    return this;
  }

   /**
   * Get isSupported
   * @return isSupported
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getIsSupported() {
    return isSupported;
  }


  public void setIsSupported(Boolean isSupported) {
    this.isSupported = isSupported;
  }


  public TargetAsset isExcluded(Boolean isExcluded) {
    
    this.isExcluded = isExcluded;
    return this;
  }

   /**
   * Get isExcluded
   * @return isExcluded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getIsExcluded() {
    return isExcluded;
  }


  public void setIsExcluded(Boolean isExcluded) {
    this.isExcluded = isExcluded;
  }


  public TargetAsset meta(Object meta) {
    
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getMeta() {
    return meta;
  }


  public void setMeta(Object meta) {
    this.meta = meta;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TargetAsset targetAsset = (TargetAsset) o;
    return Objects.equals(this.id, targetAsset.id) &&
        Objects.equals(this.symbol, targetAsset.symbol) &&
        Objects.equals(this.percent, targetAsset.percent) &&
        Objects.equals(this.isSupported, targetAsset.isSupported) &&
        Objects.equals(this.isExcluded, targetAsset.isExcluded) &&
        Objects.equals(this.meta, targetAsset.meta);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, symbol, percent, isSupported, isExcluded, meta);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TargetAsset {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    percent: ").append(toIndentedString(percent)).append("\n");
    sb.append("    isSupported: ").append(toIndentedString(isSupported)).append("\n");
    sb.append("    isExcluded: ").append(toIndentedString(isExcluded)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("symbol");
    openapiFields.add("percent");
    openapiFields.add("is_supported");
    openapiFields.add("is_excluded");
    openapiFields.add("meta");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TargetAsset
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TargetAsset.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TargetAsset is not found in the empty JSON string", TargetAsset.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TargetAsset.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TargetAsset` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `symbol`
      if (jsonObj.get("symbol") != null && !jsonObj.get("symbol").isJsonNull()) {
        UniversalSymbol.validateJsonObject(jsonObj.getAsJsonObject("symbol"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TargetAsset.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TargetAsset' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TargetAsset> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TargetAsset.class));

       return (TypeAdapter<T>) new TypeAdapter<TargetAsset>() {
           @Override
           public void write(JsonWriter out, TargetAsset value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TargetAsset read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TargetAsset given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TargetAsset
  * @throws IOException if the JSON string is invalid with respect to TargetAsset
  */
  public static TargetAsset fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TargetAsset.class);
  }

 /**
  * Convert an instance of TargetAsset to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

