/*
 * SnapTrade
 * Connect brokerage accounts to your app for live positions and trading
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@snaptrade.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ModelPortfolio;
import com.konfigthis.client.model.ModelPortfolioAssetClass;
import com.konfigthis.client.model.ModelPortfolioSecurity;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ModelPortfolioDetails
 */
@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ModelPortfolioDetails {
  public static final String SERIALIZED_NAME_MODEL_PORTFOLIO = "model_portfolio";
  @SerializedName(SERIALIZED_NAME_MODEL_PORTFOLIO)
  private ModelPortfolio modelPortfolio;

  public static final String SERIALIZED_NAME_MODEL_PORTFOLIO_SECURITY = "model_portfolio_security";
  @SerializedName(SERIALIZED_NAME_MODEL_PORTFOLIO_SECURITY)
  private List<ModelPortfolioSecurity> modelPortfolioSecurity = null;

  public static final String SERIALIZED_NAME_MODEL_PORTFOLIO_ASSET_CLASS = "model_portfolio_asset_class";
  @SerializedName(SERIALIZED_NAME_MODEL_PORTFOLIO_ASSET_CLASS)
  private List<ModelPortfolioAssetClass> modelPortfolioAssetClass = null;

  public ModelPortfolioDetails() {
  }

  public ModelPortfolioDetails modelPortfolio(ModelPortfolio modelPortfolio) {
    
    this.modelPortfolio = modelPortfolio;
    return this;
  }

   /**
   * Get modelPortfolio
   * @return modelPortfolio
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ModelPortfolio getModelPortfolio() {
    return modelPortfolio;
  }


  public void setModelPortfolio(ModelPortfolio modelPortfolio) {
    this.modelPortfolio = modelPortfolio;
  }


  public ModelPortfolioDetails modelPortfolioSecurity(List<ModelPortfolioSecurity> modelPortfolioSecurity) {
    
    this.modelPortfolioSecurity = modelPortfolioSecurity;
    return this;
  }

  public ModelPortfolioDetails addModelPortfolioSecurityItem(ModelPortfolioSecurity modelPortfolioSecurityItem) {
    if (this.modelPortfolioSecurity == null) {
      this.modelPortfolioSecurity = new ArrayList<>();
    }
    this.modelPortfolioSecurity.add(modelPortfolioSecurityItem);
    return this;
  }

   /**
   * Get modelPortfolioSecurity
   * @return modelPortfolioSecurity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelPortfolioSecurity> getModelPortfolioSecurity() {
    return modelPortfolioSecurity;
  }


  public void setModelPortfolioSecurity(List<ModelPortfolioSecurity> modelPortfolioSecurity) {
    this.modelPortfolioSecurity = modelPortfolioSecurity;
  }


  public ModelPortfolioDetails modelPortfolioAssetClass(List<ModelPortfolioAssetClass> modelPortfolioAssetClass) {
    
    this.modelPortfolioAssetClass = modelPortfolioAssetClass;
    return this;
  }

  public ModelPortfolioDetails addModelPortfolioAssetClassItem(ModelPortfolioAssetClass modelPortfolioAssetClassItem) {
    if (this.modelPortfolioAssetClass == null) {
      this.modelPortfolioAssetClass = new ArrayList<>();
    }
    this.modelPortfolioAssetClass.add(modelPortfolioAssetClassItem);
    return this;
  }

   /**
   * Get modelPortfolioAssetClass
   * @return modelPortfolioAssetClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelPortfolioAssetClass> getModelPortfolioAssetClass() {
    return modelPortfolioAssetClass;
  }


  public void setModelPortfolioAssetClass(List<ModelPortfolioAssetClass> modelPortfolioAssetClass) {
    this.modelPortfolioAssetClass = modelPortfolioAssetClass;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelPortfolioDetails modelPortfolioDetails = (ModelPortfolioDetails) o;
    return Objects.equals(this.modelPortfolio, modelPortfolioDetails.modelPortfolio) &&
        Objects.equals(this.modelPortfolioSecurity, modelPortfolioDetails.modelPortfolioSecurity) &&
        Objects.equals(this.modelPortfolioAssetClass, modelPortfolioDetails.modelPortfolioAssetClass);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelPortfolio, modelPortfolioSecurity, modelPortfolioAssetClass);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelPortfolioDetails {\n");
    sb.append("    modelPortfolio: ").append(toIndentedString(modelPortfolio)).append("\n");
    sb.append("    modelPortfolioSecurity: ").append(toIndentedString(modelPortfolioSecurity)).append("\n");
    sb.append("    modelPortfolioAssetClass: ").append(toIndentedString(modelPortfolioAssetClass)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("model_portfolio");
    openapiFields.add("model_portfolio_security");
    openapiFields.add("model_portfolio_asset_class");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ModelPortfolioDetails
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ModelPortfolioDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelPortfolioDetails is not found in the empty JSON string", ModelPortfolioDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ModelPortfolioDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelPortfolioDetails` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("model_portfolio_security") != null && !jsonObj.get("model_portfolio_security").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `model_portfolio_security` to be an array in the JSON string but got `%s`", jsonObj.get("model_portfolio_security").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("model_portfolio_asset_class") != null && !jsonObj.get("model_portfolio_asset_class").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `model_portfolio_asset_class` to be an array in the JSON string but got `%s`", jsonObj.get("model_portfolio_asset_class").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelPortfolioDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelPortfolioDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelPortfolioDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelPortfolioDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelPortfolioDetails>() {
           @Override
           public void write(JsonWriter out, ModelPortfolioDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelPortfolioDetails read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModelPortfolioDetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModelPortfolioDetails
  * @throws IOException if the JSON string is invalid with respect to ModelPortfolioDetails
  */
  public static ModelPortfolioDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelPortfolioDetails.class);
  }

 /**
  * Convert an instance of ModelPortfolioDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

